{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the ProExam IQ application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user.",
          "format": "uuid"
        },
        "firstName": {
          "type": "string",
          "description": "The first name of the user."
        },
        "lastName": {
          "type": "string",
          "description": "The last name of the user."
        },
        "email": {
          "type": "string",
          "description": "The email address of the user.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName",
        "email"
      ]
    },
    "Test": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Test",
      "type": "object",
      "description": "Represents a test or assessment within the ProExam IQ application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the test."
        },
        "name": {
          "type": "string",
          "description": "The name or title of the test."
        },
        "description": {
          "type": "string",
          "description": "A description of what the test covers."
        },
        "questionIds": {
          "type": "array",
          "description": "References to questions included in this test. (Relationship: Test 1:N Question)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "questionIds"
      ]
    },
    "Question": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Question",
      "type": "object",
      "description": "Represents a question within a test.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the question."
        },
        "text": {
          "type": "string",
          "description": "The text of the question."
        },
        "correctAnswer": {
          "type": "string",
          "description": "The correct answer for the question."
        },
        "options": {
          "type": "array",
          "description": "The possible answer options for the question.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "text",
        "correctAnswer",
        "options"
      ]
    },
    "TestSession": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "TestSession",
      "type": "object",
      "description": "Represents a specific instance of a user taking a test.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the test session."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the user taking the test. (Relationship: User 1:N TestSession)"
        },
        "testId": {
          "type": "string",
          "description": "Reference to the test being taken. (Relationship: Test 1:N TestSession)"
        },
        "startTime": {
          "type": "string",
          "description": "The date and time when the test session started.",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "description": "The date and time when the test session ended.",
          "format": "date-time"
        },
        "answers": {
          "type": "array",
          "description": "An array of question ids with users answers. (Relationship: TestSession 1:N Answer)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "userId",
        "testId",
        "startTime"
      ]
    },
    "Answer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Answer",
      "type": "object",
      "description": "The answer provided by a user for a question in a test session.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the answer."
        },
        "testSessionId": {
          "type": "string",
          "description": "Reference to the TestSession the answer belongs to. (Relationship: TestSession 1:N Answer)"
        },
        "questionId": {
          "type": "string",
          "description": "Reference to the question answered. (Relationship: Question 1:N Answer)"
        },
        "answer": {
          "type": "string",
          "description": "The answer provided by the user."
        },
        "isCorrect": {
          "type": "boolean",
          "description": "Indicates whether the answer is correct."
        }
      },
      "required": [
        "id",
        "testSessionId",
        "questionId",
        "answer",
        "isCorrect"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. Access is restricted to the user themselves. Includes denormalized userId for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/tests/{testId}",
        "definition": {
          "entityName": "Test",
          "schema": {
            "$ref": "#/backend/entities/Test"
          },
          "description": "Stores test definitions. These are globally accessible.",
          "params": [
            {
              "name": "testId",
              "description": "The unique identifier of the test."
            }
          ]
        }
      },
      {
        "path": "/questions/{questionId}",
        "definition": {
          "entityName": "Question",
          "schema": {
            "$ref": "#/backend/entities/Question"
          },
          "description": "Holds the question pool. These are globally accessible.",
          "params": [
            {
              "name": "questionId",
              "description": "The unique identifier of the question."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/testSessions/{testSessionId}",
        "definition": {
          "entityName": "TestSession",
          "schema": {
            "$ref": "#/backend/entities/TestSession"
          },
          "description": "Stores test session data. Only the user can access their own test sessions. Includes denormalized userId for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "testSessionId",
              "description": "The unique identifier of the test session."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/testSessions/{testSessionId}/answers/{answerId}",
        "definition": {
          "entityName": "Answer",
          "schema": {
            "$ref": "#/backend/entities/Answer"
          },
          "description": "Stores answers related to a test session. Path-based ownership provides access only to the user who owns the test session. Includes denormalized userId and testSessionId for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "testSessionId",
              "description": "The unique identifier of the test session."
            },
            {
              "name": "answerId",
              "description": "The unique identifier of the answer."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure security, scalability, and debuggability, adhering to the principles of Authorization Independence, Clarity of Intent, DBAC, and QAPs. The core strategy is denormalization to avoid `get()` calls in security rules, enhancing atomic operations and debuggability.  Structural segregation ensures each collection has a homogeneous security posture. Path-based ownership is used where appropriate.\n\n`/users/{userId}`: Stores user profiles.  Access is restricted to the user themselves, achieving Authorization Independence through direct path ownership.\n\n`/tests/{testId}`: Contains test definitions.  These are globally accessible (QAP: List all tests), assuming no private test definitions are required. If needed, a separate collection (e.g., `/users/{userId}/tests`) could store user-specific tests.\n\n`/questions/{questionId}`: Holds the question pool.  These are globally accessible, assuming no private questions. If needed, a separate collection (e.g., `/users/{userId}/questions`) could store user-specific questions.\n\n`/users/{userId}/testSessions/{testSessionId}`: Stores test session data. Path-based ownership ensures only the user can access their own test sessions.  The `userId` is part of the path, guaranteeing Authorization Independence.\n\n`/users/{userId}/testSessions/{testSessionId}/answers/{answerId}`: Stores answers related to a test session. Path-based ownership continues to provide access only to the user who owns the test session.\n\nThis structure effectively supports QAPs by segregating data based on access requirements. Public data (tests, questions) reside in global collections, while private data (test sessions, answers) are nested under user-specific paths."
  }
}